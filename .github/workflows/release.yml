name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build_and_release:
    name: Build and release
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
          registry-url: https://npm.pkg.github.com/

      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies based on package-lock.json
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_PRIVATE_READ_TOKEN }}

      - name: Build and pack the api-gateway configuration
        id: build-api-gateway
        run: |
          make api-gateway-package
          echo ::set-output name=PKG_NAME::$(ls *-api-gateway.tar.bz2)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_PRIVATE_READ_TOKEN }}
          TERM: dumb

      - name: Build and pack the embedded configuration
        id: build-embedded
        run: |
          make embedded-package
          echo ::set-output name=PKG_NAME::$(ls *-embedded.tar.bz2)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_PRIVATE_READ_TOKEN }}
          TERM: dumb

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (api-gateway)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.build-api-gateway.outputs.PKG_NAME }}
          asset_name: ${{ steps.build-api-gateway.outputs.PKG_NAME }}
          asset_content_type: application/x-tar

      - name: Upload Release Asset (embedded)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.build-embedded.outputs.PKG_NAME }}
          asset_name: ${{ steps.build-embedded.outputs.PKG_NAME }}
          asset_content_type: application/x-tar
